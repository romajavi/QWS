{"version":3,"file":"static/js/974.217e7bcc.chunk.js","mappings":"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","sources":["components/Button.js","components/Footer.js","components/PageContainer.js","pages/Contact.js","styles/Animations.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { glowButtonStyles, subtleGlowStyles } from '../styles/Animations.js';\n\n// Filtramos las props que no queremos que lleguen al DOM\nconst StyledButton = styled.button.withConfig({\n  shouldComponentUpdate: props => {\n    return !['isActive'].includes(props);\n  },\n})`\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.buttonText};\n  border: none;\n  border-radius: 8px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  \n  padding: ${({ $size }) =>\n    $size === 'small' ? '0.5rem 1rem' :\n      $size === 'medium' ? '0.75rem 1.5rem' :\n        '1rem 2rem'\n  };\n  \n  font-size: ${({ $size }) =>\n    $size === 'small' ? '0.875rem' :\n      $size === 'medium' ? '1rem' :\n        '1.125rem'\n  };\n  \n  min-width: ${({ $size }) =>\n    $size === 'small' ? '100px' :\n      $size === 'medium' ? '150px' :\n        '200px'\n  };\n  \n  background: ${({ $variant, theme }) =>\n    $variant === 'secondary'\n      ? theme.colors.secondaryBackground\n      : theme.colors.primary\n  };\n  \n  ${({ $glow, $variant, $glowIntensity = 1 }) =>\n    $glow && $variant === 'primary' ? glowButtonStyles($glowIntensity) : ''}\n  ${({ $glow, $variant, $glowIntensity = 0.5 }) =>\n    $glow && $variant === 'secondary' ? subtleGlowStyles($glowIntensity) : ''}\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 255, 255, 0.3);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    &:hover {\n      transform: none;\n      box-shadow: none;\n    }\n  }\n`;\n\nconst Button = ({\n  children,\n  variant = 'primary',\n  size = 'medium',\n  glow = false,\n  glowIntensity = 1,\n  className,\n  isActive,  // Capturamos isActive aquí para que no se pase al DOM\n  ...props\n}) => {\n  // Omitimos isActive de las props que se pasan al StyledButton\n  return (\n    <StyledButton\n      $variant={variant}\n      $size={size}\n      $glow={glow}\n      $glowIntensity={glowIntensity}\n      className={className}\n      {...props}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Facebook, Twitter, Instagram, Linkedin, Clock, Mail, Phone, ExternalLink } from 'lucide-react';\nimport { useTranslation } from 'react-i18next';\n\nconst gradientAnimation = keyframes`\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n`;\n\nconst FooterWrapper = styled.footer`\n  background: linear-gradient(\n    45deg,\n    ${props => props.theme.colors.background},\n    ${props => props.theme.colors.primaryBackground}\n  );\n  color: ${props => props.theme.colors.text};\n  padding: 2rem 2rem 1.5rem;\n  position: relative;\n  overflow: hidden;\n  width: 100vw;\n  left: 50%;\n  right: 50%;\n  margin-left: -50vw;\n  margin-right: -50vw;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background: linear-gradient(90deg, \n      ${props => props.theme.colors.primary},\n      ${props => props.theme.colors.accent},\n      ${props => props.theme.colors.primary}\n    );\n    background-size: 200% 200%;\n    animation: ${gradientAnimation} 3s linear infinite;\n  }\n`;\n\nconst FooterGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst FooterSection = styled.div`\n  h3 {\n    color: ${props => props.theme.colors.primary};\n    font-size: 1.2rem;\n    margin-bottom: 1rem;\n    position: relative;\n    display: inline-block;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: -5px;\n      left: 0;\n      width: 40px;\n      height: 2px;\n      background: ${props => props.theme.colors.accent};\n    }\n  }\n`;\n\nconst NavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: ${props => props.theme.colors.text};\n  text-decoration: none;\n  margin-bottom: 0.75rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: ${props => props.theme.colors.accent};\n    transform: translateX(10px);\n  }\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nconst SocialIcon = styled.a`\n  color: ${props => props.theme.colors.text};\n  background: ${props => props.theme.colors.primaryBackground};\n  padding: 0.6rem;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    color: ${props => props.theme.colors.background};\n    background: ${props => props.theme.colors.accent};\n    transform: translateY(-5px);\n  }\n\n  svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nconst Copyright = styled.div`\n  text-align: center;\n  margin-top: 2rem;\n  padding-top: 1.5rem;\n  border-top: 1px solid ${props => props.theme.colors.primary}40;\n  color: ${props => props.theme.colors.text}80;\n  font-size: 0.9rem;\n`;\n\nconst Footer = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const handleWhatsAppClick = () => {\n    window.open('https://wa.me/5491168805604', '_blank');\n  };\n\n  const handleFAQClick = (e) => {\n    e.preventDefault();\n    navigate('/services#faq');\n  };\n\n  const handleEmailClick = () => {\n    window.location.href = 'mailto:help@axiondev.tech';\n  };\n\n  const renderSectionContent = (key, section) => {\n    switch (key) {\n      case 'company':\n        return (\n          <nav>\n            <NavLink to=\"/about-us\">\n              <ExternalLink size={16} />\n              {section.links.about}\n            </NavLink>\n            <NavLink to=\"/services\">\n              <ExternalLink size={16} />\n              {section.links.services}\n            </NavLink>\n            <NavLink to=\"/contact\">\n              <Mail size={16} />\n              {section.links.contact}\n            </NavLink>\n          </nav>\n        );\n      case 'resources':\n        return (\n          <nav>\n            <NavLink to=\"/blog\">\n              <ExternalLink size={16} />\n              {section.links.blog}\n            </NavLink>\n            <NavLink to=\"#\" onClick={handleFAQClick}>\n              <ExternalLink size={16} />\n              {section.links.faq}\n            </NavLink>\n            <NavLink to=\"#\" onClick={handleEmailClick}>\n              <Phone size={16} />\n              {section.links.support}\n            </NavLink>\n          </nav>\n        );\n      case 'contact':\n        return (\n          <nav>\n            <NavLink to=\"#\" onClick={handleWhatsAppClick}>\n              <Phone size={16} />\n              {section.links.whatsapp}\n            </NavLink>\n            <NavLink to=\"mailto:info@axiondev.tech\">\n              <Mail size={16} />\n              {section.links.email}\n            </NavLink>\n            <NavLink to=\"#\">\n              <Clock size={16} />\n              {section.links.schedule}\n            </NavLink>\n          </nav>\n        );\n      case 'social':\n        return (\n          <SocialLinks>\n            <SocialIcon href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Facebook />\n            </SocialIcon>\n            <SocialIcon href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Twitter />\n            </SocialIcon>\n            <SocialIcon href=\"https://instagram.com/axiondev\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Instagram />\n            </SocialIcon>\n            <SocialIcon href=\"https://linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Linkedin />\n            </SocialIcon>\n          </SocialLinks>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <FooterWrapper>\n      <FooterGrid>\n        {Object.entries(t('footer.sections', { returnObjects: true })).map(([key, section]) => (\n          <FooterSection key={key}>\n            <h3>{section.title}</h3>\n            {renderSectionContent(key, section)}\n          </FooterSection>\n        ))}\n      </FooterGrid>\n      <Copyright>\n        {t('footer.copyright')}\n      </Copyright>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;","import React, { Suspense } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Footer from './Footer.js';\r\nimport LoadingSpinner from './LoadingSpinner.js';\r\n\r\nconst PageWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  background-color: ${props => props.theme.colors.background};\r\n  width: 100%; // Cambiado de 100vw a 100%\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow-x: hidden;\r\n\r\n    @media (max-width: 768px) {\r\n    width: 100%;\r\n    overflow-x: hidden;\r\n  }\r\n`;\r\n\r\n\r\nconst ContentWrapper = styled.main`\r\n  flex: 1;\r\n  width: 100%; // Cambiado de 100vw a 100%\r\n  min-height: ${props => props.isHome ? '100vh' : 'calc(100vh - 120px)'};\r\n  padding-top: 100px;\r\n  padding-bottom: ${props => props.showFooter ? '2rem' : '0'};\r\n  position: relative;\r\n  z-index: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n\r\n  @media (max-width: 968px) {\r\n    padding-top: 80px;\r\n    width: 100%;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding-top: 60px;\r\n    padding-bottom: 1rem;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    padding-top: 50px;\r\n    min-height: calc(100vh - 80px);\r\n  }\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  width: 100%;\r\n  max-width: 1600px;\r\n  margin: 0 auto;\r\n  padding: 0 1rem; // Reducido el padding\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  \r\n  @media (max-width: 1200px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst PageContainer = ({ children }) => {\r\n  const location = useLocation();\r\n  const isHome = location.pathname === '/';\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper isHome={isHome} showFooter={!isHome}>\r\n        <Suspense fallback={<LoadingSpinner />}>\r\n          <MainContent>\r\n            {children}\r\n          </MainContent>\r\n        </Suspense>\r\n      </ContentWrapper>\r\n      {!isHome && <Footer />}\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default PageContainer;","import React, { useState, useRef, useEffect, Suspense, lazy } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ReactTyped } from 'react-typed';\nimport { useTranslation } from 'react-i18next';\nimport PageContainer from '../components/PageContainer.js';\nimport Button from '../components/Button.js';\nimport { glowButtonStyles } from '../styles/Animations.js';\nimport { useAnimationController } from '../utils/animationController.js';\n\n// Componentes que se cargarán de forma diferida\nconst Calendar = lazy(() => import('../components/Calendar.js'));\nconst StandardPopup = lazy(() => import('../components/StandardPopup.js'));\nconst LoadingSpinner = lazy(() => import('../components/LoadingSpinner.js'));\nconst Captcha = lazy(() => import('../components/Captcha.js'));\n\n\nconst ContactWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: calc(100vh - 120px);\n  width: 100%;\n  padding-bottom: 5rem;\n\n  /* Ensure proper width handling */\n  & > div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  color: ${props => props.theme.colors.secondaryBackground};\n  margin: 2rem 0;  // Match Services.js margin\n  font-size: 2.5rem;  // Match Services.js font size\n  text-shadow: 0 0 10px rgba(0, 255, 255, 0.2);\n  height: 3.5rem;  // Match Services.js height\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  @media (max-width: 768px) {\n    font-size: 1.8rem;\n    height: 2.8rem;\n    margin: 1.5rem 0;\n  }\n`;\n\n\nconst CheckboxTitle = styled.h3`\n  color: ${props => props.theme.colors.accent};\n  font-size: 1rem;\n  margin-bottom: 1rem;\n  text-align: center;\n  text-shadow: 0 0 10px rgba(0, 255, 255, 0.2);\n`;\n\n\nconst FormContainer = styled.div`\n  width: 150%;\n  max-width: 1300px;\n  margin: 1.5rem 0;  // Match ServicesContainer margin\n  padding: 2rem;  // Match ServicesContainer padding\n  background: ${props => props.theme.colors.cardBackground};\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  position: relative;\n  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);\n  border: 1px solid ${props => props.hasError ? '#ff3333' : props.theme.colors.secondaryBackground}40;\n  min-width: min(90%, 1200px);\n  box-sizing: border-box;\n  \n  & > form {\n    width: 100%;\n    max-width: 100%;\n  }\n\n  @media (max-width: 1400px) {\n    max-width: 1000px;\n  }\n\n  @media (max-width: 768px) {\n    width: 95%;\n    padding: 1.5rem;\n    margin: 0.5rem auto;\n    gap: 2rem;\n  }\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 2rem;\n  margin-bottom: 2rem;\n  width: 100%; // Ensure full width\n\n  @media (min-width: 768px) {\n    grid-template-columns: minmax(300px, 1fr) 2px minmax(300px, 1fr);\n    gap: 2rem;\n  }\n\n  /* Ensure grid items don't overflow */\n  & > * {\n    width: 100%;\n    max-width: 100%;\n  }\n`;\n\nconst Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem; // Ajustamos el gap para mantener consistencia\n  width: 100%;\n  padding: 1rem;\n\n  h2 {\n    color: ${props => props.theme.colors.primary};\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n    text-align: left;\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: -5px;\n      left: 0;\n      width: 100%;\n      height: 2px;\n      background: linear-gradient(\n        90deg,\n        ${props => props.theme.colors.primary},\n        ${props => props.theme.colors.accent},\n        transparent\n      );\n    }\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.8rem;\n  margin-bottom: 1rem;\n  background: rgba(30, 30, 30, 0.7);\n  border: 1px solid ${props => props.$hasError ? '#ff3333' : `${props.theme.colors.secondaryBackground}40`};\n  border-radius: 8px;\n  color: ${props => props.theme.colors.text};\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus {\n    -webkit-text-fill-color: ${props => props.theme.colors.text};\n    -webkit-box-shadow: 0 0 0px 1000px rgba(30, 30, 30, 0.7) inset;\n    transition: background-color 5000s ease-in-out 0s;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: 0.8rem;\n  background: rgba(30, 30, 30, 0.7);\n  border: 1px solid ${props => props.$hasError ? '#ff3333' : `${props.theme.colors.secondaryBackground}40`};\n  border-radius: 8px;\n  color: ${props => props.theme.colors.text};\n  flex: 1; // Permitimos que crezca para llenar el espacio\n  min-height: 200px; // Altura mínima que coincide con el captcha\n  height: calc(100% - 2rem); // Restamos el espacio del título\n  resize: vertical;\n  transition: all 0.3s ease;\n  margin-bottom: 0; // Eliminamos el margen inferior\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.accent};\n    box-shadow: 0 0 10px rgba(0, 255, 255, 0.2);\n  }\n`;\n\nconst baseSpacing = {\n  marginBottom: '1rem',\n  containerGap: '1.5rem' // Añadimos un valor consistente para el espacio entre contenedores\n};\n\n\nconst Select = styled.select`\n  width: 100%; // Cambiado a ancho completo\n  max-width: 250px; // Mismo ancho máximo que RadioLabel\n  padding: 0.8rem;\n  margin: 0 auto 1rem auto;\n  display: block;\n  background: rgba(30, 30, 30, 0.7);\n  border: 1px solid ${props => props.theme.colors.secondaryBackground}40;\n  border-radius: 8px;\n  color: ${props => props.theme.colors.text};\n  cursor: pointer;\n  text-align: center;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.accent};\n    box-shadow: 0 0 10px rgba(0, 255, 255, 0.2);\n  }\n\n  option {\n    background: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    padding: 0.5rem;\n  }\n`;\n\nconst PreferenceGroup = styled.div`\n  background: rgba(30, 30, 30, 0.5);\n  padding: 1.2rem;\n  border-radius: 8px;\n  border: ${props => props.theme.colors.secondaryBackground};\n  margin-bottom: ${baseSpacing.marginBottom};\n\n  @media (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\n\nconst PreferencesContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${baseSpacing.containerGap}; // Usamos gap en lugar de margin para un espaciado más consistente\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  /* Espaciado consistente para móvil */\n  gap: 1rem;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: center;\n    gap: 1rem;\n  }\n`;\n\n\nconst RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  font-size: 0.9rem;\n  color: ${props => props.theme.colors.text};\n  cursor: pointer;\n  padding: 0.8rem 1.2rem;\n  background: rgba(30, 30, 30, 0.7);\n  border-radius: 5px;\n  width: 100%; // Ancho completo\n  max-width: 250px; // Limitar el ancho máximo para mejor apariencia\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(0, 255, 255, 0.1);\n    transform: translateY(-2px);\n  }\n\n  input[type=\"radio\"] {\n    appearance: none;\n    width: 18px;\n    height: 18px;\n    border: 2px solid ${props => props.$error ? '#ff3333' : props.theme.colors.primary};\n    border-radius: 50%;\n    position: relative;\n    transition: all 0.3s ease;\n\n    &:checked {\n      background: ${props => props.theme.colors.primary};\n      border-color: ${props => props.theme.colors.accent};\n      box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        background: ${props => props.theme.colors.background};\n      }\n    }\n  }\n    @media (min-width: 768px) {\n    width: calc(50% - 0.5rem); // Distribuye el espacio equitativamente\n  }\n`;\n\nconst Divider = styled.div`\n  display: none;\n\n  @media (min-width: 768px) {\n    display: block;\n    width: 2px;\n    background: linear-gradient(\n      to bottom,\n      transparent,\n      ${props => props.theme.colors.primary},\n      ${props => props.theme.colors.accent},\n      ${props => props.theme.colors.primary},\n      transparent\n    );\n    margin: 0 1rem;\n    opacity: 0.6;\n  }\n`;\n\nconst MessageText = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.text};\n  margin: 0.5rem 0;\n`;\n\nconst StatusIcon = styled.span`\n  font-size: 3rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst PopupMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  padding: 1rem 0;\n`;\n\nconst FormSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  flex: 1; // Asegura que ocupe todo el espacio vertical disponible\n`;\n\nconst TextAreaContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%; // Aseguramos que ocupe todo el espacio vertical disponible\n`;\n\nconst CustomButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 2rem;\n`;\n\nconst ClearButton = styled(Button)`\n  background: ${props => props.theme.colors.secondaryBackground};\n  &:hover {\n    background: ${props => props.theme.colors.secondaryBackground};\n  }\n`;\n\nconst SubmitButton = styled(Button)`\n  ${glowButtonStyles}\n`;\n\nconst ErrorMessage = styled.p`\n  color: #ff3333;\n  font-size: 0.875rem;\n  text-align: center;\n  margin-top: 0.5rem;\n`;\n\nconst FadeIn = styled.div`\n  animation: fadeIn 0.3s ease-in;\n  \n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\n\nconst ContentFadeIn = styled.div`\n  opacity: 0;\n  animation: fadeIn 0.3s ease-in forwards;\n  animation-delay: 1s;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\n\n\nconst Contact = () => {\n  const { shouldAnimate, animationLevel } = useAnimationController();\n\n  // Configuramos las animaciones del formulario\n  const getFormAnimation = () => {\n    // Retornar un objeto vacío para evitar cualquier animación\n    return {};\n  };\n\n  const formAnimation = getFormAnimation();\n\n\n  const { t } = useTranslation();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    contactPreference: [],\n    contactDays: [],\n    contactTime: [],\n    appointmentDate: '',\n    appointmentTime: '10:00',\n    appointmentMedium: '',\n    observations: ''\n  });\n\n  const [submitStatus, setSubmitStatus] = useState({\n    success: false,\n    titleKey: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [formStatus, setFormStatus] = useState({\n    isSubmitting: false,\n    isSuccess: false,\n    error: null\n  });\n  const [isCaptchaVerified, setIsCaptchaVerified] = useState(false);\n\n  // Nuevos estados para carga progresiva\n  const [showTitle, setShowTitle] = useState(false);\n  const [isAppointmentLoading, setIsAppointmentLoading] = useState(true);\n\n\n\n  const navigate = useNavigate();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    // Mostrar título primero\n    setShowTitle(true);\n\n    // Después de la animación del título, cargar el contenido\n    const contentTimer = setTimeout(() => {\n      setIsAppointmentLoading(false);\n    }, 1000); // Este delay da tiempo para que el título termine su animación\n\n    return () => {\n      clearTimeout(contentTimer);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (formStatus.isSuccess) {\n      setSubmitStatus({\n        success: true,\n        titleKey: 'contact.form.status.success.title',\n        message: t('contact.form.status.success.message')\n      });\n      setShowPopup(true);\n    } else if (formStatus.error) {\n      setSubmitStatus({\n        success: false,\n        titleKey: 'contact.form.status.error.title',\n        message: t('contact.form.status.error.message')\n      });\n      setShowPopup(true);\n    }\n  }, [formStatus, t]);\n\n  const validateForm = () => {\n    console.log('Starting form validation');\n    const newErrors = {};\n\n    if (!formData.name.trim()) newErrors.name = true;\n    if (!formData.email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) newErrors.email = true;\n    if (!formData.phone.trim()) newErrors.phone = true;\n    if (!formData.observations || formData.observations.trim() === '') newErrors.observations = true;\n    if (!isCaptchaVerified) newErrors.captcha = true;\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Función para manejar el envío del formulario\n  // 3. Update handleSubmit function\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    if (!validateForm()) {\n      setSubmitStatus({\n        success: false,\n        titleKey: 'contact.form.errors.title',\n        message: t('contact.form.errors.required')\n      });\n      setShowPopup(true);\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      console.log('Enviando datos:', formData); // Debug\n\n      const response = await fetch('http://localhost:5000/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      console.log('Response status:', response.status); // Debug\n      console.log('Response headers:', response.headers); // Debug\n\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Respuesta no válida del servidor');\n      }\n\n      const data = await response.json();\n      console.log('Response data:', data); // Debug\n\n      if (response.ok) {\n        setFormStatus({ isSubmitting: false, isSuccess: true, error: null });\n        handleReset();\n      } else {\n        throw new Error(data.message || 'Error en el servidor');\n      }\n    } catch (error) {\n      console.error('Error detallado:', error); // Debug\n      setFormStatus({\n        isSubmitting: false,\n        isSuccess: false,\n        error: error.message\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 4. Update handleReset function\n  const handleReset = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    setFormData({\n      name: '',\n      email: '',\n      phone: '',\n      company: '',\n      contactPreference: [],\n      contactDays: [],\n      contactTime: [],\n      appointmentDate: '',\n      appointmentTime: '10:00',\n      appointmentMedium: '',\n      observations: ''\n    });\n\n    setSelectedDate(null);\n    setErrors({});\n    setIsCaptchaVerified(false);\n    setSubmitStatus({\n      success: false,\n      titleKey: '',\n      message: ''\n    });\n    setShowPopup(false);\n\n    if (formRef.current) {\n      formRef.current.reset();\n      const radios = formRef.current.querySelectorAll('input[type=\"radio\"]');\n      radios.forEach(radio => {\n        radio.checked = false;\n      });\n\n      const textarea = formRef.current.querySelector('textarea');\n      if (textarea) {\n        textarea.value = '';\n      }\n\n      const select = formRef.current.querySelector('select[name=\"appointmentTime\"]');\n      if (select) {\n        select.value = '10:00';\n      }\n    }\n\n\n    // Limpiar cualquier mensaje de error o éxito que pudiera estar mostrándose\n    setShowPopup(false);\n  };\n\n  // Función para manejar la selección de fecha\n  const handleDateSelect = (date) => {\n    if (!date) return;\n    const formattedDate = date.toISOString().split('T')[0];\n    setSelectedDate(date);\n    setFormData(prev => ({\n      ...prev,\n      appointmentDate: formattedDate\n    }));\n  };\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    if (submitStatus.success) {\n      setTimeout(() => navigate('/'), 500);\n    }\n  };\n\n  console.log('Rendering popup with:', {\n    isOpen: showPopup,\n    titleKey: submitStatus.titleKey,\n    message: submitStatus.message\n  });\n\n  return (\n    <PageContainer>\n      {isLoading && <LoadingSpinner fullScreen={true} />}\n      <ContactWrapper>\n        <Suspense fallback={<LoadingSpinner />}>\n          <Title>\n            <FadeIn>\n              <ReactTyped\n                strings={[t('contact.title')]}\n                typeSpeed={50}\n                showCursor={true}\n                cursorChar=\"|\"\n                startDelay={300}\n              />\n            </FadeIn>\n          </Title>\n          <ContentFadeIn>\n            <FormContainer $hasError={Object.keys(errors).length > 0}>\n              <form onSubmit={handleSubmit} ref={formRef}>\n                <FormGrid>\n                  {/* Sección de información personal - carga inmediata */}\n                  <Section>\n                    <h2>{t('contact.form.sections.personal')}</h2>\n\n                    {/* Los inputs básicos se mantienen igual ya que son ligeros */}\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder={t('contact.form.inputs.name')}\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      $hasError={errors.name}\n                      autoComplete=\"given-name\"\n                    />\n\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder={t('contact.form.inputs.email')}\n                      value={formData.email}\n                      onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                      $hasError={errors.email}\n                      autoComplete=\"email\"\n                    />\n\n                    <Input\n                      type=\"tel\"\n                      name=\"phone\"\n                      placeholder={t('contact.form.inputs.phone')}\n                      value={formData.phone}\n                      onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                      $hasError={errors.phone}\n                      autoComplete=\"tel\"\n                    />\n\n                    <Input\n                      type=\"text\"\n                      name=\"company\"\n                      placeholder={t('contact.form.inputs.company')}\n                      value={formData.company}\n                      onChange={(e) => setFormData({ ...formData, company: e.target.value })}\n                      autoComplete=\"organization\"\n                    />\n\n                    {/* Grupos de preferencias - carga progresiva */}\n                    <Suspense fallback={<LoadingSpinner />}>\n                      <PreferencesContainer>\n                        <PreferenceGroup $hasError={errors.contactPreference}>\n                          <CheckboxTitle $error={errors.contactPreference}>\n                            {t('contact.form.preferences.contact.title')}\n                          </CheckboxTitle>\n                          <RadioContainer>\n                            <RadioLabel $hasError={errors.contactPreference}>\n                              <input\n                                type=\"radio\"\n                                name=\"contactPreference\"\n                                value=\"phone\"\n                                checked={formData.contactPreference.includes('phone')}\n                                onChange={(e) => {\n                                  setFormData({\n                                    ...formData,\n                                    contactPreference: [e.target.value]\n                                  });\n                                  if (errors.contactPreference) {\n                                    setErrors(prev => ({ ...prev, contactPreference: false }));\n                                  }\n                                }}\n                              />\n                              {t('contact.form.preferences.contact.options.phone')}\n                            </RadioLabel>\n                            <RadioLabel $hasError={errors.contactPreference}>\n                              <input\n                                type=\"radio\"\n                                name=\"contactPreference\"\n                                value=\"email\"\n                                checked={formData.contactPreference.includes('email')}\n                                onChange={(e) => {\n                                  setFormData({\n                                    ...formData,\n                                    contactPreference: [e.target.value]\n                                  });\n                                  if (errors.contactPreference) {\n                                    setErrors(prev => ({ ...prev, contactPreference: false }));\n                                  }\n                                }}\n                              />\n                              {t('contact.form.preferences.contact.options.email')}\n                            </RadioLabel>\n                          </RadioContainer>\n                        </PreferenceGroup>\n                      </PreferencesContainer>\n\n\n\n                      {/* Grupos de días y horarios */}\n                      <PreferenceGroup $hasError={errors.contactDays}>\n                        <CheckboxTitle $error={errors.contactDays}>\n                          {t('contact.form.preferences.days.title')}\n                        </CheckboxTitle>\n                        <RadioContainer>\n                          <RadioLabel $hasError={errors.contactDays}>\n                            <input\n                              type=\"radio\"\n                              name=\"contactDays\"\n                              value=\"weekdays\"\n                              checked={formData.contactDays.includes('weekdays')}\n                              onChange={(e) => {\n                                setFormData({\n                                  ...formData,\n                                  contactDays: [e.target.value]\n                                });\n                                if (errors.contactDays) {\n                                  setErrors(prev => ({ ...prev, contactDays: false }));\n                                }\n                              }}\n                            />\n                            {t('contact.form.preferences.days.options.weekdays')}\n                          </RadioLabel>\n                          <RadioLabel $hasError={errors.contactDays}>\n                            <input\n                              type=\"radio\"\n                              name=\"contactDays\"\n                              value=\"weekend\"\n                              checked={formData.contactDays.includes('weekend')}\n                              onChange={(e) => {\n                                setFormData({\n                                  ...formData,\n                                  contactDays: [e.target.value]\n                                });\n                                if (errors.contactDays) {\n                                  setErrors(prev => ({ ...prev, contactDays: false }));\n                                }\n                              }}\n                            />\n                            {t('contact.form.preferences.days.options.weekend')}\n                          </RadioLabel>\n                        </RadioContainer>\n                      </PreferenceGroup>\n\n                      <PreferenceGroup $hasError={errors.contactTime}>\n                        <CheckboxTitle $error={errors.contactTime}>\n                          {t('contact.form.preferences.time.title')}\n                        </CheckboxTitle>\n                        <RadioContainer>\n                          <RadioLabel $hasError={errors.contactTime}>\n                            <input\n                              type=\"radio\"\n                              name=\"contactTime\"\n                              value=\"morning\"\n                              checked={formData.contactTime.includes('morning')}\n                              onChange={(e) => {\n                                setFormData({\n                                  ...formData,\n                                  contactTime: [e.target.value]\n                                });\n                                if (errors.contactTime) {\n                                  setErrors(prev => ({ ...prev, contactTime: false }));\n                                }\n                              }}\n                            />\n                            {t('contact.form.preferences.time.options.morning')}\n                          </RadioLabel>\n                          <RadioLabel $hasError={errors.contactTime}>\n                            <input\n                              type=\"radio\"\n                              name=\"contactTime\"\n                              value=\"afternoon\"\n                              checked={formData.contactTime.includes('afternoon')}\n                              onChange={(e) => {\n                                setFormData({\n                                  ...formData,\n                                  contactTime: [e.target.value]\n                                });\n                                if (errors.contactTime) {\n                                  setErrors(prev => ({ ...prev, contactTime: false }));\n                                }\n                              }}\n                            />\n                            {t('contact.form.preferences.time.options.afternoon')}\n                          </RadioLabel>\n                        </RadioContainer>\n                      </PreferenceGroup>\n                    </Suspense>\n\n                    {/* Área de observaciones */}\n                    <FormSection>\n                      <TextAreaContainer>\n                        <CheckboxTitle $error={errors.contactTime}>\n                          {t('contact.form.inputs.observations')}\n                        </CheckboxTitle>\n                        <TextArea\n                          name=\"observations\"\n                          value={formData.observations}\n                          onChange={(e) => setFormData({ ...formData, observations: e.target.value })}\n                          style={{ flex: 1, minHeight: '150px' }}\n                          $hasError={errors.observations}\n                        />\n                      </TextAreaContainer>\n                    </FormSection>\n                  </Section>\n\n                  <Divider />\n                  {/* Sección de cita - carga diferida */}\n                  <Section>\n                    <h2>{t('contact.form.sections.appointment')}</h2>\n                    <Suspense fallback={\n                      <LoadingSpinner\n                        fullScreen={false}\n                        size=\"30px\"\n                        borderWidth=\"3px\"\n                        height=\"100%\"\n                      />\n                    }>\n                      {isAppointmentLoading ? (\n                        <div style={{\n                          display: 'flex',\n                          justifyContent: 'center',\n                          alignItems: 'center',\n                          minHeight: '300px'\n                        }}>\n                          <LoadingSpinner\n                            fullScreen={false}\n                            size=\"30px\"\n                            borderWidth=\"3px\"\n                            height=\"auto\"\n                          />\n                        </div>\n                      ) : (\n                        <FadeIn>\n                          <PreferencesContainer> {/* Agregamos el contenedor principal para mantener consistencia */}\n                            <Calendar\n                              onSelectDate={handleDateSelect}\n                              selectedDate={selectedDate}\n                            />\n\n                            <PreferenceGroup>\n                              <CheckboxTitle>\n                                {t('contact.form.appointment.time')}\n                              </CheckboxTitle>\n                              <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}> {/* Contenedor para centrado */}\n                                <Select\n                                  name=\"appointmentTime\"\n                                  value={formData.appointmentTime}\n                                  onChange={(e) => setFormData({\n                                    ...formData,\n                                    appointmentTime: e.target.value\n                                  })}\n                                  $hasError={errors.appointmentTime}\n                                >\n                                  <option value=\"09:00\">09:00</option>\n                                  <option value=\"10:00\">10:00</option>\n                                  <option value=\"11:00\">11:00</option>\n                                  <option value=\"12:00\">12:00</option>\n                                  <option value=\"13:00\">13:00</option>\n                                  <option value=\"14:00\">14:00</option>\n                                  <option value=\"15:00\">15:00</option>\n                                  <option value=\"16:00\">16:00</option>\n                                  <option value=\"17:00\">17:00</option>\n                                </Select>\n                              </div>\n                            </PreferenceGroup>\n\n                            <PreferenceGroup>\n                              <CheckboxTitle>\n                                {t('contact.form.appointment.medium.title')}\n                              </CheckboxTitle>\n                              <RadioContainer>\n                                <RadioLabel>\n                                  <input\n                                    type=\"radio\"\n                                    name=\"appointmentMedium\"\n                                    value=\"zoom\"\n                                    checked={formData.appointmentMedium === 'zoom'}\n                                    onChange={(e) => setFormData({\n                                      ...formData,\n                                      appointmentMedium: e.target.value\n                                    })}\n                                  />\n                                  {t('contact.form.appointment.medium.options.zoom')}\n                                </RadioLabel>\n                                <RadioLabel>\n                                  <input\n                                    type=\"radio\"\n                                    name=\"appointmentMedium\"\n                                    value=\"meet\"\n                                    checked={formData.appointmentMedium === 'meet'}\n                                    onChange={(e) => setFormData({\n                                      ...formData,\n                                      appointmentMedium: e.target.value\n                                    })}\n                                  />\n                                  {t('contact.form.appointment.medium.options.meet')}\n                                </RadioLabel>\n                                <RadioLabel>\n                                  <input\n                                    type=\"radio\"\n                                    name=\"appointmentMedium\"\n                                    value=\"whatsapp\"\n                                    checked={formData.appointmentMedium === 'whatsapp'}\n                                    onChange={(e) => setFormData({\n                                      ...formData,\n                                      appointmentMedium: e.target.value\n                                    })}\n                                  />\n                                  {t('contact.form.appointment.medium.options.whatsapp')}\n                                </RadioLabel>\n                              </RadioContainer>\n                            </PreferenceGroup>\n\n                            <PreferenceGroup>\n                              <CheckboxTitle $error={errors.captcha}>\n                                {t('contact.captcha.title')}\n                              </CheckboxTitle>\n                              <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}> {/* Contenedor para centrado */}\n                                <Captcha\n                                  onVerify={(verified) => {\n                                    setIsCaptchaVerified(verified);\n                                    if (verified) {\n                                      setErrors(prev => ({ ...prev, captcha: false }));\n                                    } else {\n                                      setErrors(prev => ({ ...prev, captcha: true }));\n                                    }\n                                  }}\n                                />\n                              </div>\n                              {errors.captcha && (\n                                <ErrorMessage>{t('contact.captcha.required')}</ErrorMessage>\n                              )}\n                            </PreferenceGroup>\n                          </PreferencesContainer>\n                        </FadeIn>\n                      )}\n                    </Suspense>\n                  </Section>\n                </FormGrid>\n\n                <CustomButtonGroup>\n                  <ClearButton\n                    variant=\"secondary\"\n                    size=\"small\"\n                    onClick={handleReset}\n                  >\n                    {t('contact.form.buttons.clear')}\n                  </ClearButton>\n                  <SubmitButton\n                    variant=\"primary\"\n                    size=\"small\"\n                    type=\"submit\"\n                  >\n                    {t('contact.form.buttons.submit')}\n                  </SubmitButton>\n                </CustomButtonGroup>\n              </form>\n            </FormContainer>\n          </ContentFadeIn>\n        </Suspense>\n      </ContactWrapper>\n\n      {/* Popup - carga diferida */}\n      {showPopup && (\n        <Suspense fallback={null}>\n          <StandardPopup\n            isOpen={showPopup}\n            onClose={handleClosePopup}\n            titleKey={submitStatus.titleKey}\n          >\n            <PopupMessage>\n              <StatusIcon>\n                {submitStatus.success ? \"✅\" : \"❌\"}\n              </StatusIcon>\n              <MessageText>\n                {submitStatus.message}\n              </MessageText>\n            </PopupMessage>\n          </StandardPopup>\n        </Suspense>\n      )}\n    </PageContainer>\n  );\n}\n\nexport default Contact;","import { keyframes, css } from 'styled-components';\r\n\r\n// Animación de resplandor pulsante\r\nexport const glowPulse = keyframes`\r\n  0% { box-shadow: 0 0 5px rgba(255, 215, 0, 0.5), 0 0 10px rgba(255, 215, 0, 0.3); }\r\n  50% { box-shadow: 0 0 7px rgba(255, 215, 0, 0.8), 0 0 40px rgba(255, 215, 0, 0.5); }\r\n  100% { box-shadow: 0 0 5px rgba(255, 215, 0, 0.5), 0 0 10px rgba(255, 215, 0, 0.3); }\r\n`;\r\n\r\n// Animación sutil para el Captcha\r\nexport const floatAnimation = keyframes`\r\n  0% { transform: translateY(0); }\r\n  50% { transform: translateY(-6px); }\r\n  100% { transform: translateY(0); }\r\n`;\r\n\r\n// Convertir a función para mantener consistencia\r\nexport const floatingStyles = (intensity = 1) => css`\r\n  animation: ${floatAnimation} 2s infinite ease-in-out;\r\n  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n  transform: translateY(0);\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(${-3 * intensity}px);\r\n  }\r\n`;\r\n\r\n// Los otros estilos que ya convertimos a funciones\r\nexport const glowButtonStyles = (intensity = 1) => css`\r\n  animation: ${glowPulse} 2s infinite;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    animation: none;\r\n    box-shadow: 0 0 ${12 * intensity}px rgba(255, 215, 0, 0.8), \r\n                0 0 ${50 * intensity}px rgba(255, 215, 0, 0.5);\r\n  }\r\n`;\r\n\r\nexport const subtleGlowStyles = (intensity = 0.5) => css`\r\n  animation: ${glowPulse} 3s infinite;\r\n  animation-delay: 0.5s;\r\n  \r\n  &:hover {\r\n    animation: none;\r\n    box-shadow: 0 0 ${15 * intensity}px rgba(255, 215, 0, 0.6), \r\n                0 0 ${30 * intensity}px rgba(255, 215, 0, 0.4);\r\n  }\r\n`;"],"names":["StyledButton","styled","button","withConfig","shouldComponentUpdate","props","includes","theme","colors","primary","buttonText","_ref","$size","_ref2","_ref3","_ref4","$variant","secondaryBackground","_ref5","$glow","$glowIntensity","glowButtonStyles","_ref6","subtleGlowStyles","_ref7","children","variant","size","glow","glowIntensity","className","isActive","_jsx","gradientAnimation","keyframes","FooterWrapper","footer","background","primaryBackground","text","accent","FooterGrid","div","FooterSection","NavLink","Link","SocialLinks","SocialIcon","a","Copyright","Footer","t","useTranslation","navigate","useNavigate","handleWhatsAppClick","window","open","handleFAQClick","e","preventDefault","handleEmailClick","location","href","renderSectionContent","key","section","_jsxs","to","ExternalLink","links","about","services","Mail","contact","blog","onClick","faq","Phone","support","whatsapp","email","Clock","schedule","target","rel","Facebook","Twitter","Instagram","Linkedin","Object","entries","returnObjects","map","title","PageWrapper","ContentWrapper","main","isHome","showFooter","MainContent","useLocation","pathname","Suspense","fallback","LoadingSpinner","Calendar","lazy","StandardPopup","Captcha","ContactWrapper","Title","h1","CheckboxTitle","h3","FormContainer","cardBackground","hasError","FormGrid","Section","Input","input","$hasError","TextArea","textarea","baseSpacing","Select","select","PreferenceGroup","PreferencesContainer","RadioContainer","RadioLabel","label","$error","Divider","MessageText","p","StatusIcon","span","PopupMessage","FormSection","TextAreaContainer","CustomButtonGroup","ClearButton","Button","SubmitButton","ErrorMessage","FadeIn","ContentFadeIn","Contact","shouldAnimate","animationLevel","useAnimationController","formData","setFormData","useState","name","phone","company","contactPreference","contactDays","contactTime","appointmentDate","appointmentTime","appointmentMedium","observations","submitStatus","setSubmitStatus","success","titleKey","message","errors","setErrors","selectedDate","setSelectedDate","isLoading","setIsLoading","showPopup","setShowPopup","formStatus","setFormStatus","isSubmitting","isSuccess","error","isCaptchaVerified","setIsCaptchaVerified","showTitle","setShowTitle","isAppointmentLoading","setIsAppointmentLoading","formRef","useRef","useEffect","contentTimer","setTimeout","clearTimeout","handleReset","current","reset","querySelectorAll","forEach","radio","checked","querySelector","value","console","log","isOpen","PageContainer","fullScreen","ReactTyped","strings","typeSpeed","showCursor","cursorChar","startDelay","keys","length","onSubmit","async","validateForm","newErrors","trim","test","captcha","response","fetch","method","headers","body","JSON","stringify","status","contentType","get","Error","data","json","ok","ref","type","placeholder","onChange","autoComplete","prev","style","flex","minHeight","borderWidth","height","display","justifyContent","alignItems","onSelectDate","date","formattedDate","toISOString","split","width","onVerify","verified","onClose","handleClosePopup","glowPulse","floatAnimation","floatingStyles","intensity","arguments","undefined","css"],"sourceRoot":""}