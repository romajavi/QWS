{"version":3,"file":"static/js/131.741fd611.chunk.js","mappings":"gMAMA,MAAMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAOC,IAAI;;;;;;;;;;;;;;EAgBjCC,GAAiBH,EAAAA,EAAAA,IAAOC,EAAAA,EAAOC,IAAI;gBACzBE,GAASA,EAAMC,MAAMC,OAAOC;WACjCH,GAASA,EAAMC,MAAMC,OAAOE;;;;;;;;sBAQjBJ,GAASA,EAAMC,MAAMC,OAAOG;EAG5CC,EAAcV,EAAAA,GAAOW,MAAM;;;;;;;;;WAStBP,GAASA,EAAMC,MAAMC,OAAOG;;;;;;;;;;;aAW1BL,GAASA,EAAMC,MAAMC,OAAOM;;;EAKnCC,EAAab,EAAAA,GAAOc,EAAE;WACjBV,GAASA,EAAMC,MAAMC,OAAOE;;;;;;;EASjCO,EAAkBf,EAAAA,GAAOE,GAAG;;;;;;;;;;;EAa5Bc,EAAchB,EAAAA,GAAOE,GAAG;;;;;;;;;;;;;;;;;;;EAiE9B,EA5CsBe,IAA8C,IAA7C,OAAEC,EAAM,QAAEC,EAAO,SAAEC,EAAQ,SAAEC,GAAUJ,EAC5D,MAAM,EAAEK,IAAMC,EAAAA,EAAAA,MAWd,IATAC,EAAAA,EAAAA,YAAU,KACJN,IACFO,SAASC,KAAKC,MAAMC,SAAW,UAE1B,KACLH,SAASC,KAAKC,MAAMC,SAAW,OAAO,IAEvC,CAACV,KAECA,EAAQ,OAAO,KAGpB,MAAMW,EAAkBC,EAAAA,SAAeC,IAAIV,GAAUW,IACnDC,EAAAA,EAAAA,KAACjB,EAAW,CAAAK,SAAEW,MAGhB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAAAb,UACdY,EAAAA,EAAAA,KAAClC,EAAY,CACXoC,QAAShB,EACTiB,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAAIhB,UAErBmB,EAAAA,EAAAA,MAACrC,EAAc,CACbgC,QAASM,GAAKA,EAAEC,kBAChBN,QAAS,CAAEO,MAAO,GAAKN,QAAS,GAChCC,QAAS,CAAEK,MAAO,EAAGN,QAAS,GAC9BE,KAAM,CAAEI,MAAO,GAAKN,QAAS,GAAIhB,SAAA,EAEjCY,EAAAA,EAAAA,KAACvB,EAAW,CAACyB,QAAShB,EAAQE,SAAC,UAC/BY,EAAAA,EAAAA,KAACpB,EAAU,CAAAQ,SAAEC,EAAEF,MACfa,EAAAA,EAAAA,KAAClB,EAAe,CAAAM,SACbQ,UAIS,C","sources":["components/StandardPopup.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useTranslation } from 'react-i18next';\n\n\nconst PopupOverlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  padding: 1rem;\n`;\n\nconst PopupContainer = styled(motion.div)`\n  background: ${props => props.theme.colors.primaryBackground};\n  color: ${props => props.theme.colors.text};\n  padding: 2.5rem;\n  border-radius: 10px;\n  width: 90%;\n  max-width: 500px;\n  text-align: center;\n  position: relative;\n  box-shadow: 0 0 20px rgba(0, 255, 255, 0.2);\n  border: 1px solid ${props => props.theme.colors.accent};\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  background: none;\n  border: none;\n  color: ${props => props.theme.colors.accent};\n  font-size: 1.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 255, 255, 0.1);\n    color: ${props => props.theme.colors.primary};\n    transform: rotate(90deg);\n  }\n`;\n\nconst PopupTitle = styled.h2`\n  color: ${props => props.theme.colors.text};\n  margin-bottom: 1.5rem;\n  font-size: 1.5rem;\n  text-shadow: 0 0 1px rgba(0, 255, 255, 0.3);\n  @media (max-width: 768px) {\n    font-size: 1.3rem;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: stretch;\n  justify-content: center;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n\n  // Mantenemos la dirección en row incluso en móvil\n  flex-direction: row;\n`;\n\nconst PopupButton = styled.div`\n  flex: 1;\n  min-width: 120px; // Reducimos el ancho mínimo para móvil\n  max-width: 200px;\n\n  @media (max-width: 479px) {\n    min-width: 100px; // Ajustamos el ancho mínimo para móvil\n    max-width: 150px; // Limitamos el ancho máximo en móvil\n  }\n\n  > button {\n    width: 100%;\n    height: 40px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: 0 0.75rem; // Reducimos el padding en móvil\n    font-size: 0.9rem; // Reducimos ligeramente el tamaño de la fuente en móvil\n  }\n`;\n\nconst StandardPopup = ({ isOpen, onClose, titleKey, children }) => {\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    }\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  // Función auxiliar para envolver los children con PopupButton\n  const wrappedChildren = React.Children.map(children, child => (\n    <PopupButton>{child}</PopupButton>\n  ));\n\n  return (\n    <AnimatePresence>\n      <PopupOverlay\n        onClick={onClose}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        <PopupContainer\n          onClick={e => e.stopPropagation()}\n          initial={{ scale: 0.5, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.5, opacity: 0 }}\n        >\n          <CloseButton onClick={onClose}>×</CloseButton>\n          <PopupTitle>{t(titleKey)}</PopupTitle>\n          <ButtonContainer>\n            {wrappedChildren}\n          </ButtonContainer>\n        </PopupContainer>\n      </PopupOverlay>\n    </AnimatePresence>\n  );\n};\n\nexport default StandardPopup;"],"names":["PopupOverlay","styled","motion","div","PopupContainer","props","theme","colors","primaryBackground","text","accent","CloseButton","button","primary","PopupTitle","h2","ButtonContainer","PopupButton","_ref","isOpen","onClose","titleKey","children","t","useTranslation","useEffect","document","body","style","overflow","wrappedChildren","React","map","child","_jsx","AnimatePresence","onClick","initial","opacity","animate","exit","_jsxs","e","stopPropagation","scale"],"sourceRoot":""}